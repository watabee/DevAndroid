// Top-level build file where you can add configuration options common to all sub-projects/modules.
import dependencies.Deps

buildscript {
    repositories {
        google()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath Deps.androidGradlePlugin
        classpath Deps.Kotlin.gradlePlugin
        classpath Deps.androidJunit5GradlePlugin
        classpath Deps.ktlintGradlePlugin
        classpath Deps.detektGradlePlugin
        classpath Deps.scabbardGradlePlugin
        classpath Deps.releaseHubGradlePlugin
        classpath Deps.Hilt.gradlePlugin
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
        }
    }
}

subprojects {
    pluginManager.withPlugin("kotlin-android") {
        apply plugin: "org.jlleitschuh.gradle.ktlint"
        apply plugin: "io.gitlab.arturbosch.detekt"

        ktlint {
            version = Deps.Ktlint.version
            android = true
            ignoreFailures = true
            reporters {
                reporter "checkstyle"
            }
            filter {
                exclude("**/generated/**")
            }
        }

        detekt {
            config = files("$rootDir/config/detekt-config.yml")
            buildUponDefaultConfig = true
            ignoreFailures = true
            reports {
                xml.enabled = true
                html.enabled = false
                txt.enabled = false
            }
        }

        afterEvaluate {
            if (System.getenv("CI") != "true") {
                tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
                    it.dependsOn ktlintFormat
                }
            }

            tasks.withType(io.gitlab.arturbosch.detekt.Detekt) {
                exclude("**/generated/**")
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply plugin: "com.releaseshub.gradle.plugin"

releasesHub {
    dependenciesBasePath = "buildSrc/src/main/java/dependencies"
    dependenciesClassNames = ["dependencies.kt"]

    pullRequestEnabled = true
    pullRequestsMax = 10

    gitHubUserName = "watabee"
    gitHubUserEmail = "watabee.dev@gmail.com"

    gitHubRepositoryOwner = "watabee"
    gitHubRepositoryName = "DevAndroid"
}
